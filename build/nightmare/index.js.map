{"version":3,"sources":["../../src/nightmare/index.js"],"names":["nightmare","startLoading","url","Promise","resolve","reject","timer","start","goto","wait","run","stop","time","calculate","catch","error","console"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,0BAAlB;;AAEO,IAAMC,sCAAe,SAAfA,YAAe,CAACC,GAAD;AAAA,SAAU,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtE,QAAMC,QAAQ,qBAAd;AACAA,UAAMC,KAAN;AACAP,cACGQ,IADH,CACQN,GADR,EAEGO,IAFH,GAGGC,GAHH,CAGO,YAAM;AACTJ,YAAMK,IAAN;AACA,UAAMC,OAAON,MAAMO,SAAN,EAAb;AACAT,cAAQQ,IAAR;AACD,KAPH,EAQGE,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBC,cAAQD,KAAR,CAAc,gBAAd,EAAgCA,KAAhC;AACD,KAVH;AAWD,GAdqC,CAAV;AAAA,CAArB;kBAeQd,Y","file":"index.js","sourcesContent":["import Nightmare from 'nightmare';\nimport Timer from '../timer';\n\nconst nightmare = Nightmare();\n\nexport const startLoading = (url) =>  new Promise ((resolve, reject) => {\n  const timer = new Timer();\n  timer.start();\n  nightmare\n    .goto(url)\n    .wait()\n    .run(() => {\n      timer.stop();\n      const time = timer.calculate();\n      resolve(time);\n    })\n    .catch(function (error) {\n      console.error('Search failed:', error);\n    });\n})\nexport default startLoading;\n"]}